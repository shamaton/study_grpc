// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/chat.proto

package chat

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type None struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *None) Reset()         { *m = None{} }
func (m *None) String() string { return proto.CompactTextString(m) }
func (*None) ProtoMessage()    {}
func (*None) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_fe9674db1763fdcb, []int{0}
}
func (m *None) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_None.Unmarshal(m, b)
}
func (m *None) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_None.Marshal(b, m, deterministic)
}
func (dst *None) XXX_Merge(src proto.Message) {
	xxx_messageInfo_None.Merge(dst, src)
}
func (m *None) XXX_Size() int {
	return xxx_messageInfo_None.Size(m)
}
func (m *None) XXX_DiscardUnknown() {
	xxx_messageInfo_None.DiscardUnknown(m)
}

var xxx_messageInfo_None proto.InternalMessageInfo

type RequestAuthorize struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestAuthorize) Reset()         { *m = RequestAuthorize{} }
func (m *RequestAuthorize) String() string { return proto.CompactTextString(m) }
func (*RequestAuthorize) ProtoMessage()    {}
func (*RequestAuthorize) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_fe9674db1763fdcb, []int{1}
}
func (m *RequestAuthorize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestAuthorize.Unmarshal(m, b)
}
func (m *RequestAuthorize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestAuthorize.Marshal(b, m, deterministic)
}
func (dst *RequestAuthorize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestAuthorize.Merge(dst, src)
}
func (m *RequestAuthorize) XXX_Size() int {
	return xxx_messageInfo_RequestAuthorize.Size(m)
}
func (m *RequestAuthorize) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestAuthorize.DiscardUnknown(m)
}

var xxx_messageInfo_RequestAuthorize proto.InternalMessageInfo

func (m *RequestAuthorize) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ResponseAuthorize struct {
	SessionId            []byte   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseAuthorize) Reset()         { *m = ResponseAuthorize{} }
func (m *ResponseAuthorize) String() string { return proto.CompactTextString(m) }
func (*ResponseAuthorize) ProtoMessage()    {}
func (*ResponseAuthorize) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_fe9674db1763fdcb, []int{2}
}
func (m *ResponseAuthorize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseAuthorize.Unmarshal(m, b)
}
func (m *ResponseAuthorize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseAuthorize.Marshal(b, m, deterministic)
}
func (dst *ResponseAuthorize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseAuthorize.Merge(dst, src)
}
func (m *ResponseAuthorize) XXX_Size() int {
	return xxx_messageInfo_ResponseAuthorize.Size(m)
}
func (m *ResponseAuthorize) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseAuthorize.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseAuthorize proto.InternalMessageInfo

func (m *ResponseAuthorize) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

type RequestConnect struct {
	SessionId            []byte   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestConnect) Reset()         { *m = RequestConnect{} }
func (m *RequestConnect) String() string { return proto.CompactTextString(m) }
func (*RequestConnect) ProtoMessage()    {}
func (*RequestConnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_fe9674db1763fdcb, []int{3}
}
func (m *RequestConnect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestConnect.Unmarshal(m, b)
}
func (m *RequestConnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestConnect.Marshal(b, m, deterministic)
}
func (dst *RequestConnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestConnect.Merge(dst, src)
}
func (m *RequestConnect) XXX_Size() int {
	return xxx_messageInfo_RequestConnect.Size(m)
}
func (m *RequestConnect) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestConnect.DiscardUnknown(m)
}

var xxx_messageInfo_RequestConnect proto.InternalMessageInfo

func (m *RequestConnect) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

type CommandSay struct {
	SessionId            []byte   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandSay) Reset()         { *m = CommandSay{} }
func (m *CommandSay) String() string { return proto.CompactTextString(m) }
func (*CommandSay) ProtoMessage()    {}
func (*CommandSay) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_fe9674db1763fdcb, []int{4}
}
func (m *CommandSay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSay.Unmarshal(m, b)
}
func (m *CommandSay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSay.Marshal(b, m, deterministic)
}
func (dst *CommandSay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSay.Merge(dst, src)
}
func (m *CommandSay) XXX_Size() int {
	return xxx_messageInfo_CommandSay.Size(m)
}
func (m *CommandSay) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSay.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSay proto.InternalMessageInfo

func (m *CommandSay) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *CommandSay) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Event struct {
	// Types that are valid to be assigned to Event:
	//	*Event_None
	//	*Event_Join
	//	*Event_Leave
	//	*Event_Log
	Event                isEvent_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_fe9674db1763fdcb, []int{5}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (dst *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(dst, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

type isEvent_Event interface {
	isEvent_Event()
}

type Event_None struct {
	None *EventNone `protobuf:"bytes,1,opt,name=none,proto3,oneof"`
}

type Event_Join struct {
	Join *EventJoin `protobuf:"bytes,2,opt,name=join,proto3,oneof"`
}

type Event_Leave struct {
	Leave *EventLeave `protobuf:"bytes,3,opt,name=leave,proto3,oneof"`
}

type Event_Log struct {
	Log *EventLog `protobuf:"bytes,4,opt,name=log,proto3,oneof"`
}

func (*Event_None) isEvent_Event() {}

func (*Event_Join) isEvent_Event() {}

func (*Event_Leave) isEvent_Event() {}

func (*Event_Log) isEvent_Event() {}

func (m *Event) GetEvent() isEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *Event) GetNone() *EventNone {
	if x, ok := m.GetEvent().(*Event_None); ok {
		return x.None
	}
	return nil
}

func (m *Event) GetJoin() *EventJoin {
	if x, ok := m.GetEvent().(*Event_Join); ok {
		return x.Join
	}
	return nil
}

func (m *Event) GetLeave() *EventLeave {
	if x, ok := m.GetEvent().(*Event_Leave); ok {
		return x.Leave
	}
	return nil
}

func (m *Event) GetLog() *EventLog {
	if x, ok := m.GetEvent().(*Event_Log); ok {
		return x.Log
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Event) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Event_OneofMarshaler, _Event_OneofUnmarshaler, _Event_OneofSizer, []interface{}{
		(*Event_None)(nil),
		(*Event_Join)(nil),
		(*Event_Leave)(nil),
		(*Event_Log)(nil),
	}
}

func _Event_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Event)
	// event
	switch x := m.Event.(type) {
	case *Event_None:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.None); err != nil {
			return err
		}
	case *Event_Join:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Join); err != nil {
			return err
		}
	case *Event_Leave:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Leave); err != nil {
			return err
		}
	case *Event_Log:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Log); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Event.Event has unexpected type %T", x)
	}
	return nil
}

func _Event_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Event)
	switch tag {
	case 1: // event.none
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventNone)
		err := b.DecodeMessage(msg)
		m.Event = &Event_None{msg}
		return true, err
	case 2: // event.join
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventJoin)
		err := b.DecodeMessage(msg)
		m.Event = &Event_Join{msg}
		return true, err
	case 3: // event.leave
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventLeave)
		err := b.DecodeMessage(msg)
		m.Event = &Event_Leave{msg}
		return true, err
	case 4: // event.log
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventLog)
		err := b.DecodeMessage(msg)
		m.Event = &Event_Log{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Event_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Event)
	// event
	switch x := m.Event.(type) {
	case *Event_None:
		s := proto.Size(x.None)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_Join:
		s := proto.Size(x.Join)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_Leave:
		s := proto.Size(x.Leave)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_Log:
		s := proto.Size(x.Log)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type EventNone struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventNone) Reset()         { *m = EventNone{} }
func (m *EventNone) String() string { return proto.CompactTextString(m) }
func (*EventNone) ProtoMessage()    {}
func (*EventNone) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_fe9674db1763fdcb, []int{6}
}
func (m *EventNone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventNone.Unmarshal(m, b)
}
func (m *EventNone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventNone.Marshal(b, m, deterministic)
}
func (dst *EventNone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventNone.Merge(dst, src)
}
func (m *EventNone) XXX_Size() int {
	return xxx_messageInfo_EventNone.Size(m)
}
func (m *EventNone) XXX_DiscardUnknown() {
	xxx_messageInfo_EventNone.DiscardUnknown(m)
}

var xxx_messageInfo_EventNone proto.InternalMessageInfo

type EventJoin struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventJoin) Reset()         { *m = EventJoin{} }
func (m *EventJoin) String() string { return proto.CompactTextString(m) }
func (*EventJoin) ProtoMessage()    {}
func (*EventJoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_fe9674db1763fdcb, []int{7}
}
func (m *EventJoin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventJoin.Unmarshal(m, b)
}
func (m *EventJoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventJoin.Marshal(b, m, deterministic)
}
func (dst *EventJoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventJoin.Merge(dst, src)
}
func (m *EventJoin) XXX_Size() int {
	return xxx_messageInfo_EventJoin.Size(m)
}
func (m *EventJoin) XXX_DiscardUnknown() {
	xxx_messageInfo_EventJoin.DiscardUnknown(m)
}

var xxx_messageInfo_EventJoin proto.InternalMessageInfo

func (m *EventJoin) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EventLeave struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventLeave) Reset()         { *m = EventLeave{} }
func (m *EventLeave) String() string { return proto.CompactTextString(m) }
func (*EventLeave) ProtoMessage()    {}
func (*EventLeave) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_fe9674db1763fdcb, []int{8}
}
func (m *EventLeave) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventLeave.Unmarshal(m, b)
}
func (m *EventLeave) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventLeave.Marshal(b, m, deterministic)
}
func (dst *EventLeave) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventLeave.Merge(dst, src)
}
func (m *EventLeave) XXX_Size() int {
	return xxx_messageInfo_EventLeave.Size(m)
}
func (m *EventLeave) XXX_DiscardUnknown() {
	xxx_messageInfo_EventLeave.DiscardUnknown(m)
}

var xxx_messageInfo_EventLeave proto.InternalMessageInfo

func (m *EventLeave) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EventLog struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventLog) Reset()         { *m = EventLog{} }
func (m *EventLog) String() string { return proto.CompactTextString(m) }
func (*EventLog) ProtoMessage()    {}
func (*EventLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_fe9674db1763fdcb, []int{9}
}
func (m *EventLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventLog.Unmarshal(m, b)
}
func (m *EventLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventLog.Marshal(b, m, deterministic)
}
func (dst *EventLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventLog.Merge(dst, src)
}
func (m *EventLog) XXX_Size() int {
	return xxx_messageInfo_EventLog.Size(m)
}
func (m *EventLog) XXX_DiscardUnknown() {
	xxx_messageInfo_EventLog.DiscardUnknown(m)
}

var xxx_messageInfo_EventLog proto.InternalMessageInfo

func (m *EventLog) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EventLog) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*None)(nil), "None")
	proto.RegisterType((*RequestAuthorize)(nil), "RequestAuthorize")
	proto.RegisterType((*ResponseAuthorize)(nil), "ResponseAuthorize")
	proto.RegisterType((*RequestConnect)(nil), "RequestConnect")
	proto.RegisterType((*CommandSay)(nil), "CommandSay")
	proto.RegisterType((*Event)(nil), "Event")
	proto.RegisterType((*EventNone)(nil), "EventNone")
	proto.RegisterType((*EventJoin)(nil), "EventJoin")
	proto.RegisterType((*EventLeave)(nil), "EventLeave")
	proto.RegisterType((*EventLog)(nil), "EventLog")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	Authorize(ctx context.Context, in *RequestAuthorize, opts ...grpc.CallOption) (*ResponseAuthorize, error)
	Connect(ctx context.Context, in *RequestConnect, opts ...grpc.CallOption) (Chat_ConnectClient, error)
	Say(ctx context.Context, in *CommandSay, opts ...grpc.CallOption) (*None, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) Authorize(ctx context.Context, in *RequestAuthorize, opts ...grpc.CallOption) (*ResponseAuthorize, error) {
	out := new(ResponseAuthorize)
	err := c.cc.Invoke(ctx, "/Chat/Authorize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) Connect(ctx context.Context, in *RequestConnect, opts ...grpc.CallOption) (Chat_ConnectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[0], "/Chat/Connect", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatConnectClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Chat_ConnectClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type chatConnectClient struct {
	grpc.ClientStream
}

func (x *chatConnectClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatClient) Say(ctx context.Context, in *CommandSay, opts ...grpc.CallOption) (*None, error) {
	out := new(None)
	err := c.cc.Invoke(ctx, "/Chat/Say", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	Authorize(context.Context, *RequestAuthorize) (*ResponseAuthorize, error)
	Connect(*RequestConnect, Chat_ConnectServer) error
	Say(context.Context, *CommandSay) (*None, error)
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_Authorize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAuthorize)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Authorize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chat/Authorize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Authorize(ctx, req.(*RequestAuthorize))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_Connect_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RequestConnect)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServer).Connect(m, &chatConnectServer{stream})
}

type Chat_ConnectServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type chatConnectServer struct {
	grpc.ServerStream
}

func (x *chatConnectServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

func _Chat_Say_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandSay)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Say(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chat/Say",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Say(ctx, req.(*CommandSay))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Authorize",
			Handler:    _Chat_Authorize_Handler,
		},
		{
			MethodName: "Say",
			Handler:    _Chat_Say_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Connect",
			Handler:       _Chat_Connect_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/chat.proto",
}

func init() { proto.RegisterFile("proto/chat.proto", fileDescriptor_chat_fe9674db1763fdcb) }

var fileDescriptor_chat_fe9674db1763fdcb = []byte{
	// 340 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xd1, 0x4e, 0xc2, 0x30,
	0x14, 0x86, 0x99, 0x6c, 0xe0, 0xce, 0x8c, 0x42, 0xaf, 0x26, 0x09, 0x91, 0x54, 0x63, 0xbc, 0x2a,
	0x66, 0xde, 0x78, 0xab, 0x84, 0x04, 0x8d, 0xf1, 0xa2, 0x3e, 0x80, 0xa9, 0x70, 0x02, 0x33, 0xac,
	0x45, 0x5a, 0x48, 0xd4, 0x17, 0xf1, 0x71, 0x4d, 0xbb, 0xc1, 0xa2, 0xce, 0x70, 0xd7, 0xfe, 0xe7,
	0x6b, 0x4f, 0xff, 0xfe, 0x07, 0x5a, 0x8b, 0xa5, 0x32, 0xaa, 0x3f, 0x9e, 0x09, 0xc3, 0xdc, 0x92,
	0x36, 0xc0, 0x7f, 0x54, 0x12, 0xe9, 0x39, 0xb4, 0x38, 0xbe, 0xad, 0x50, 0x9b, 0x9b, 0x95, 0x99,
	0xa9, 0x65, 0xfa, 0x81, 0x84, 0x80, 0x2f, 0x45, 0x86, 0xb1, 0xd7, 0xf3, 0x2e, 0x42, 0xee, 0xd6,
	0x34, 0x81, 0x36, 0x47, 0xbd, 0x50, 0x52, 0x63, 0x09, 0x76, 0x01, 0x34, 0x6a, 0x9d, 0x2a, 0xf9,
	0x9c, 0x4e, 0x1c, 0x7e, 0xc0, 0xc3, 0x42, 0xb9, 0x9b, 0xd0, 0x3e, 0x1c, 0x16, 0x77, 0x0f, 0x94,
	0x94, 0x38, 0x36, 0xbb, 0x0e, 0x0c, 0x01, 0x06, 0x2a, 0xcb, 0x84, 0x9c, 0x3c, 0x89, 0xf7, 0x1d,
	0x30, 0x89, 0xa1, 0x99, 0xa1, 0xd6, 0x62, 0x8a, 0xf1, 0x9e, 0x7b, 0xe8, 0x66, 0x4b, 0xbf, 0x3c,
	0x08, 0x86, 0x6b, 0x94, 0x86, 0xf4, 0xc0, 0x97, 0x4a, 0xe6, 0x4e, 0xa2, 0x04, 0x98, 0x53, 0xad,
	0xef, 0x51, 0x8d, 0xbb, 0x8a, 0x25, 0x5e, 0x55, 0x2a, 0xdd, 0x15, 0x5b, 0xe2, 0x5e, 0xa5, 0xd2,
	0x12, 0xb6, 0x42, 0x4e, 0x21, 0x98, 0xa3, 0x58, 0x63, 0x5c, 0x77, 0x48, 0x94, 0x23, 0x0f, 0x56,
	0x1a, 0xd5, 0x78, 0x5e, 0x23, 0x5d, 0xa8, 0xcf, 0xd5, 0x34, 0xf6, 0x1d, 0x12, 0x16, 0x88, 0x9a,
	0x8e, 0x6a, 0xdc, 0xea, 0xb7, 0x4d, 0x08, 0xd0, 0x4a, 0x34, 0x82, 0x70, 0xfb, 0x06, 0x7a, 0x52,
	0x6c, 0x6c, 0xbb, 0xca, 0x4f, 0xef, 0x01, 0x94, 0xcd, 0x2a, 0x89, 0x6b, 0xd8, 0xdf, 0xf4, 0xaa,
	0xaa, 0xff, 0xff, 0x49, 0xc9, 0x27, 0xf8, 0x83, 0x99, 0x30, 0x24, 0x81, 0xb0, 0x0c, 0xb4, 0xcd,
	0x7e, 0x0f, 0x43, 0x87, 0xb0, 0xbf, 0xb9, 0x9f, 0x41, 0x73, 0x93, 0xe8, 0x11, 0xfb, 0x19, 0x71,
	0xa7, 0x91, 0x9b, 0xbf, 0xf4, 0xc8, 0x31, 0xd4, 0x6d, 0x8c, 0x11, 0x2b, 0x33, 0xed, 0x04, 0xcc,
	0x3a, 0x7f, 0x69, 0xb8, 0x21, 0xbc, 0xfa, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xe4, 0x6c, 0x6a, 0x79,
	0x98, 0x02, 0x00, 0x00,
}
